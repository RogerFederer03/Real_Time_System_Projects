#!/bin/bash
#Run all the simulations in the folders 

#procedure - run from the experiments folder

#make sure there's nothing leftover running
pkill clustering_launcher
pkill synthetic_task
pkill exp_run
pkill python

#rootDir=/export/austen/home/kieselbachk/core36aug2util05-90
#rootDir=/export/austen/experiment/core36aug2util05-90
#rootDir=/export/austen/experiment/core36aug2avg3
#rootDir=/export/austen/experiment/testcore36aug2avg3
#?rootDir=/home/jing/cluster/core14aug2avg3
#rootDir=/home/jing/cluster/core14aug2avg2
#?rootDir=/home/jing/cluster/core14aug2avg1
#rootDir=/home/jing/cluster/core14aug2avg3speedup
#rootDir=/home/jing/cluster/core14aug2avg2speedup
#rootDir=/home/jing/cluster/core14aug2avg3exp1speedup
#rootDir=/home/jing/cluster/core14aug2avg2exp1speedup
#rootDir=/home/jing/cluster/core14aug2avg1exp1speedup
#rootDir=/home/jing/cluster/core14aug2avg3exp1arbispeedup
rootDir=/home/jing/cluster/core14aug2avg3hardspeedup
####rootDir=/home/jing/cluster/testcore14aug2avg1

#step 1
#this for loop determines which directories are looped over
#for expFolder in bestaug5util20 bestaug5util30 bestaug5util40 bestaug5util50 bestaug5util60 bestaug5util70 bestaug5util80 
for expFolder in bestaug5util20 bestaug5util30 bestaug5util40 bestaug5util50 bestaug5util55 bestaug5util60 bestaug5util70 bestaug5util80 
######for expFolder in bestaug5util80 bestaug5util70 bestaug5util60 bestaug5util50 bestaug5util40 bestaug5util30 bestaug5util20
#for expFolder in bestaug5util60 bestaug5util50 bestaug5util40 bestaug5util30 bestaug5util20
#for expFolder in bestaug5util50 bestaug5util40 bestaug5util30 bestaug5util20
#for expFolder in bestaug5util70 bestaug5util60 bestaug5util50 bestaug5util40 
#for expFolder in bestaug5util40 bestaug5util50 bestaug5util60 bestaug5util70 bestaug5util80
#for expFolder in bestaug5util20

do
    expDir=$rootDir/$expFolder

	while [ 1 ]
	do	
	#Find all tasksets in $expDir that have no result data
	#toDo=$(./check $expDir 26 95)
        toDo=$(./check $expDir 1 100)

	one=$(echo $toDo | cut --delimiter=' ' -f1)
	toDo=$(echo $toDo | cut --delimiter=' ' -f1 --complement)
	
	#if one == toDo then toDo was the empty string, and we should be done
	if [[ $one == $toDo ]]; then

		#doubleCheck=$(./check $expDir 26 95)
		doubleCheck=$(./check $expDir 1 100)
		if [[ $doubleCheck == "" ]]; then
			echo "Done with $expDir"
			break
		fi

	fi

	#step4
	#create helper programs that actually run each taskset
	#then, wait until they all return
	
	echo "Doing $expDir taskset $one"
	./exp_run $one "$expDir" 1 14

	#sleep 1s

	done

done

python aggregate_results.py experiment_summary.txt $rootDir/bestaug5util20 $rootDir/bestaug5util30 $rootDir/bestaug5util40 $rootDir/bestaug5util50 $rootDir/bestaug5util60 $rootDir/bestaug5util70 $rootDir/bestaug5util80 
#python aggregate_results.py experiment_summary.txt $rootDir/bestaug5util60 

mv experiment_summary.txt /export/austen/home/lij
mv experiment_summary_verbose.txt /export/austen/home/lij
